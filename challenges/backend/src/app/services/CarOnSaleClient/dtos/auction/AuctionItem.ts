import { IAssociatedVehicle } from "./AssociatedVehicle";
import { ISellerAccount } from "./SellterAccount";

export interface AuctionItem {
    id: number;
    label: string;
    endingTime: Date;
    state: number;
    minimumRequiredAsk: number;
    currentHighestBidValue: number;
    numBids: number;
    locationAddress?: any;
    locationCity: string;
    locationZip: string;
    startedAt: Date;
    createdAt: Date;
    updatedAt: Date;
    hotBid: boolean;
    originalMinimumRequiredAsk?: any;
    allowInstantPurchase: boolean;
    instantPurchasePossibleUntil?: any;
    advertisementHtmlContent?: any;
    instantPurchasePrice?: any;
    locationCountryCode: string;
    startingBidValue: number;
    uuid: string;
    _fk_uuid_vehicle: string;
    _fk_uuid_sellerUser: string;
    _fk_uuid_highestBiddingBuyerUser?: any;
    urlToPickupBuyerDocument?: any;
    paymentProcess: number;
    type: number;
    _fk_uuid_creatingSellerUser?: any;
    isTest: boolean;
    displayMinAsk: boolean;
    isLive: boolean;
    isTransportationDisabledManually: boolean;
    startingBidValueNet: number;
    minimumRequiredAskNet: number;
    originalMinimumRequiredAskNet?: any;
    purchasePriceNet: number;
    currentHighestBidValueNet: number;
    highestBidValueAtEndingTimeNet?: any;
    instantPurchasePriceNet?: any;
    lastOfferBySellerNet?: any;
    previousLastOfferBySellerNet?: any;
    counterOfferByBuyerNet?: any;
    previousCounterOfferByBuyerNet?: any;
    renegotiationMidpointValueNet?: any;
    pickupInstructions: string;
    thirdPartyVATDepositTransferReference?: any;
    thirdPartyVatTransferReference?: any;
    thirdPartyVATDepositRefundReference?: any;
    preventSellerFactoring: boolean;
    listingSurchargeFeeInvoiceReference?: any;
    additionalTaxType: number;
    additionalTaxValue?: any;
    isVATReportable: boolean;
    thirdPartyVATDepositReversalReference?: any;
    uploadMethod: number;
    additionalTaxExportDiscount: number;
    isCosCheckPlusGuaranteeEnabled: boolean;
    isExtendedGuaranteeEnabled: boolean;
    bookedServicesInvoiceReference?: any;
    directUploadRejectionReasons: any[];
    readyToBeReinsertedSince?: any;
    externalRenegotiationTicketUuid?: any;
    urlToCoverLetter?: any;
    sellerToCosInvoiceUrlFirstUploadedAt?: any;
    biddingAgentValue: number;
    didIBidAtLeastOnce: boolean;
    isParked: boolean;
    remainingTimeInSeconds: number;
    remainingTimeForInstantPurchaseInSeconds?: any;
    associatedVehicle: IAssociatedVehicle;
    amIInvolved: boolean;
    amIHighestBidder: boolean;
    sellerContact?: any;
    rating?: any;
    isTransportationAllowedForRegion: boolean;
    isExternalPaymentAllowed: boolean;
    remainingDaysUntilReauctioning?: any;
    remainingDaysUntilLatePickup?: any;
    latePickupFee?: any;
    isTransportationBookingPossible: boolean;
    isExpressPickupAvailable: boolean;
    pickupPossibleInDays?: any;
    sellerAccount: ISellerAccount;
    amIRegularBuyer: boolean;
    isCrossBorderNetSale: boolean;
    buyerPurchaseFee: number;
    buyerSuccessFee: number;
    vatAmount: number;
    vatRate: number;
    complaintPeriodEndAt?: any;
    transportBookingPeriodEndAt?: any;
    isCompoundPickup: boolean;
    hasIncreasedPickupTime: boolean;
    buyerCrossBorderProcessingAmount: number;
    isRecommended: boolean;
    sellerType: number;
    transportationTask?: any;
    enforceTransportation: boolean;
    isTransportationAvailable: boolean;
    isMinAskReached: boolean;
    isWatching: boolean;
    biddingAgentValueNet?: any;
    distanceToVehicleInKms: number;
    hasNextAuction?: any;
    hasPreviousAuction?: any;
}

